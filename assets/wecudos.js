eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"wecudos/adapters/application\", \n  [\"ember-data\",\"wecudos/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = DS.ActiveModelAdapter.extend({\n      host: config.apiUrl\n    });\n  });//# sourceURL=wecudos/adapters/application.js");

;eval("define(\"wecudos/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"wecudos/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=wecudos/app.js");

;eval("define(\"wecudos/components/cdv-nav-bar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      tagName: \'header\'\n    });\n  });//# sourceURL=wecudos/components/cdv-nav-bar.js");

;eval("define(\"wecudos/components/lf-overlay\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Component.extend({\n      tagName: \'span\',\n      classNames: [\'lf-overlay\'],\n      didInsertElement: function() {\n        Ember.$(\'body\').addClass(\'lf-modal-open\');\n      },\n      willDestroy: function() {\n        Ember.$(\'body\').removeClass(\'lf-modal-open\');\n      },\n      click: function() {\n        this.sendAction(\'clickAway\');\n      }\n    });\n  });//# sourceURL=wecudos/components/lf-overlay.js");

;eval("define(\"wecudos/components/liquid-modal\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      classNames: [\'liquid-modal\'],\n      currentContext: Ember.computed.oneWay(\'owner.modalContexts.lastObject\'),\n\n      owner: null, // set by injection\n\n      innerView: Ember.computed(\'currentContext\', function() {\n        var self = this,\n            current = this.get(\'currentContext\'),\n            name = current.get(\'name\'),\n            container = this.get(\'container\'),\n            component = container.lookup(\'component-lookup:main\').lookupFactory(name);\n        Ember.assert(\"Tried to render a modal using component \'\" + name + \"\', but couldn\'t find it.\", !!component);\n\n        var args = Ember.copy(current.get(\'params\'));\n\n        args.registerMyself = Ember.on(\'init\', function() {\n          self.set(\'innerViewInstance\', this);\n        });\n\n        // set source so we can bind other params to it\n        args._source = Ember.computed(function() {\n          return current.get(\"source\");\n        });\n\n        var otherParams = current.get(\"options.otherParams\");\n        var from, to;\n        for (from in otherParams) {\n          to = otherParams[from];\n          args[to] = Ember.computed.alias(\"_source.\"+from);\n        }\n\n        var actions = current.get(\"options.actions\") || {};\n\n        // Override sendAction in the modal component so we can intercept and\n        // dynamically dispatch to the controller as expected\n        args.sendAction = function(name) {\n          var actionName = actions[name];\n          if (!actionName) {\n            this._super.apply(this, Array.prototype.slice.call(arguments));\n            return;\n          }\n\n          var controller = current.get(\"source\");\n          var args = Array.prototype.slice.call(arguments, 1);\n          args.unshift(actionName);\n          controller.send.apply(controller, args);\n        };\n\n        return component.extend(args);\n      }),\n\n      actions: {\n        outsideClick: function() {\n          if (this.get(\'currentContext.options.dismissWithOutsideClick\')) {\n            this.send(\'dismiss\');\n          } else {\n            proxyToInnerInstance(this, \'outsideClick\');\n          }\n        },\n        escape: function() {\n          if (this.get(\'currentContext.options.dismissWithEscape\')) {\n            this.send(\'dismiss\');\n          } else {\n            proxyToInnerInstance(this, \'escape\');\n          }\n        },\n        dismiss: function() {\n          var source = this.get(\'currentContext.source\'),\n              proto = source.constructor.proto(),\n              params = this.get(\'currentContext.params\'),\n              clearThem = {};\n\n          for (var key in params) {\n            clearThem[key] = proto[key];\n          }\n          source.setProperties(clearThem);\n        }\n      }\n    });\n\n    function proxyToInnerInstance(self, message) {\n      var vi = self.get(\'innerViewInstance\');\n      if (vi) {\n        vi.send(message);\n      }\n    }\n  });//# sourceURL=wecudos/components/liquid-modal.js");

;eval("define(\"wecudos/components/lm-container\", \n  [\"ember\",\"liquid-fire/tabbable\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    /*\n       Parts of this file were adapted from ic-modal\n\n       https://github.com/instructure/ic-modal\n       Released under The MIT License (MIT)\n       Copyright (c) 2014 Instructure, Inc.\n    */\n\n    var Ember = __dependency1__[\"default\"];\n\n    /**\n     * If you do something to move focus outside of the browser (like\n     * command+l to go to the address bar) and then tab back into the\n     * window, capture it and focus the first tabbable element in an active\n     * modal.\n     */\n    var lastOpenedModal = null;\n    Ember.$(document).on(\'focusin\', handleTabIntoBrowser);\n\n    function handleTabIntoBrowser() {\n      if (lastOpenedModal) {\n        lastOpenedModal.focus();\n      }\n    }\n\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      classNames: [\'lm-container\'],\n      attributeBindings: [\'tabindex\'],\n      tabindex: 0,\n\n      keyUp: function(event) {\n        // Escape key\n        if (event.keyCode === 27) {\n          this.sendAction();\n        }\n      },\n\n      keyDown: function(event) {\n        // Tab key\n        if (event.keyCode === 9) {\n          this.constrainTabNavigation(event);\n        }\n      },\n\n      didInsertElement: function() {\n        this.focus();\n        lastOpenedModal = this;\n      },\n\n      willDestroy: function() {\n        lastOpenedModal = null;\n      },\n\n      focus: function() {\n        if (this.get(\'element\').contains(document.activeElement)) {\n          // just let it be if we already contain the activeElement\n          return;\n        }\n        var target = this.$(\'[autofocus]\');\n        if (!target.length) {\n          target = this.$(\':tabbable\');\n        }\n\n        if (!target.length) {\n          target = this.$();\n        }\n\n        target[0].focus();\n      },\n\n      constrainTabNavigation: function(event) {\n        var tabbable = this.$(\':tabbable\');\n        var finalTabbable = tabbable[event.shiftKey ? \'first\' : \'last\']()[0];\n        var leavingFinalTabbable = (\n          finalTabbable === document.activeElement ||\n            // handle immediate shift+tab after opening with mouse\n            this.get(\'element\') === document.activeElement\n        );\n        if (!leavingFinalTabbable) { return; }\n        event.preventDefault();\n        tabbable[event.shiftKey ? \'last\' : \'first\']()[0].focus();\n      }\n    });\n  });//# sourceURL=wecudos/components/lm-container.js");

;eval("define(\"wecudos/components/modal-dialog\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      actions: {\n        close: function() {\n          this.sendAction();\n        }\n      }\n    });\n  });//# sourceURL=wecudos/components/modal-dialog.js");

;eval("define(\"wecudos/helpers/liquid-bind\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* liquid-bind is really just liquid-with with a pre-provided block\n       that just says {{this}} */\n\n    __exports__[\"default\"] = function liquidBindHelper() {\n      var options = arguments[arguments.length-1],\n          container = options.data.view.container,\n          liquidWith = container.lookupFactory(\'helper:liquid-with\');\n      options.fn = container.lookup(\'template:liquid-with-self\');\n      return liquidWith.apply(this, arguments);\n    }\n  });//# sourceURL=wecudos/helpers/liquid-bind.js");

;eval("define(\"wecudos/helpers/liquid-box\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = function(){\n      Ember.assert(\"liquid-box is deprecated, see CHANGELOG.md\", false);\n    }\n  });//# sourceURL=wecudos/helpers/liquid-box.js");

;eval("define(\"wecudos/helpers/liquid-if\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    function factory(invert) {\n      return function(property, options) {\n        var View = options.data.view.container.lookupFactory(\'view:liquid-if\');\n\n        var templates = [options.fn, options.inverse];\n        if (invert) {\n          templates.reverse();\n        }\n        delete options.fn;\n        delete options.inverse;\n\n        if (options.hash.containerless) {\n          View = View.extend(Ember._Metamorph);\n        }\n\n        options.hash.templates = templates;\n        options.hash.showFirstBinding = property;\n        return Ember.Handlebars.helpers.view.call(this, View, options);\n      };\n    }\n\n    __exports__.factory = factory;__exports__[\"default\"] = factory(false);\n  });//# sourceURL=wecudos/helpers/liquid-if.js");

;eval("define(\"wecudos/helpers/liquid-measure\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = function(){\n      Ember.assert(\"liquid-measure is deprecated, see CHANGELOG.md\", false);\n    }\n  });//# sourceURL=wecudos/helpers/liquid-measure.js");

;eval("define(\"wecudos/helpers/liquid-outlet\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function liquidOutletHelper(property, options) {\n      if (property && property.data && property.data.isRenderData) {\n        options = property;\n        property = \'main\';\n        options.types.push(\'STRING\');\n      }\n\n      var View = options.data.view.container.lookupFactory(\'view:liquid-outlet\');\n      if (options.hash.containerless) {\n        View = View.extend(Ember._Metamorph);\n      }\n      options.hash.viewClass = View;\n      return Ember.Handlebars.helpers.outlet.call(this, property, options);\n    }\n  });//# sourceURL=wecudos/helpers/liquid-outlet.js");

;eval("define(\"wecudos/helpers/liquid-unless\", \n  [\"wecudos/helpers/liquid-if\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var factory = __dependency1__.factory;\n    __exports__[\"default\"] = factory(true);\n  });//# sourceURL=wecudos/helpers/liquid-unless.js");

;eval("define(\"wecudos/helpers/liquid-with\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function liquidWithHelper() {\n      var context = arguments[0],\n          options = arguments[arguments.length-1],\n          View = options.data.view.container.lookupFactory(\'view:liquid-with\'),\n          innerOptions = {\n            data: options.data,\n            hash: {},\n            hashTypes: {}\n          };\n\n      View = View.extend({\n        originalArgs: Array.prototype.slice.apply(arguments, [0, -1]),\n        originalHash: options.hash,\n        originalHashTypes: options.hashTypes,\n        innerTemplate: options.fn\n      });\n\n      if (options.hash.containerless) {\n        View = View.extend(Ember._Metamorph);\n      }\n\n      innerOptions.hash.boundContextBinding = context;\n\n      [\n        \'class\',\n        \'classNames\',\n        \'classNameBindings\',\n        \'use\',\n        \'id\',\n        \'growDuration\',\n        \'growPixelsPerSecond\',\n        \'growEasing\',\n        \'enableGrowth\',\n        \'containerless\'\n      ].forEach(function(field){\n        if (options.hash.hasOwnProperty(field)) {\n          innerOptions.hash[field] = options.hash[field];\n          innerOptions.hashTypes[field] = options.hashTypes[field];\n        }\n      });\n\n      return Ember.Handlebars.helpers.view.call(this, View, innerOptions);\n    }\n  });//# sourceURL=wecudos/helpers/liquid-with.js");

;eval("define(\"wecudos/helpers/with-apply\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    // This helper is internal to liquid-with.\n    __exports__[\"default\"] = function withApplyHelper(options){\n      var view = options.data.view,\n          parent = view.get(\'liquidWithParent\'),\n          withArgs = parent.get(\'originalArgs\').slice();\n\n      withArgs[0] = \'lwith-view.boundContext\';\n      options = Ember.copy(options);\n\n      // This works to inject our keyword in Ember >= 1.9\n      if (!view._keywords) {\n        view._keywords = {};\n      }\n      view._keywords[\'lwith-view\'] = view;\n\n      // This works to inject our keyword in Ember < 1.9\n      if (!options.data.keywords) {\n        options.data.keywords = {};\n      }\n      options.data.keywords[\'lwith-view\'] = view;\n      options.fn = parent.get(\'innerTemplate\');\n      options.hash = parent.get(\'originalHash\');\n      options.hashTypes = parent.get(\'originalHashTypes\');\n      withArgs.push(options);\n      return Ember.Handlebars.helpers[\"with\"].apply(this, withArgs);\n    }\n  });//# sourceURL=wecudos/helpers/with-apply.js");

;eval("define(\"wecudos/initializers/cordova-auth\", \n  [\"wecudos/services/session\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Session = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name: \'session\',\n\n      initialize: function(container, application) {\n        container.register(\'session:main\', Session);\n\n        application.inject(\'route\', \'session\', \'session:main\');\n        application.inject(\'controller\', \'session\', \'session:main\');\n        application.inject(\'view\', \'session\', \'session:main\');\n      }\n    };\n  });//# sourceURL=wecudos/initializers/cordova-auth.js");

;eval("define(\"wecudos/services/session\", \n  [\"ember\",\"ic-ajax\",\"wecudos/utils/facebook\",\"wecudos/utils/google\",\"wecudos/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var icAjax = __dependency2__[\"default\"];\n    var Facebook = __dependency3__[\"default\"];\n    var Google = __dependency4__[\"default\"];\n    var config = __dependency5__[\"default\"];\n\n    var get = Ember.get;\n\n    function assertConfig(name) {\n      return function() {\n        var msg = \'ember-cli-cordova-auth: \';\n        msg += \'You need to define a \' + name + \'property in your config/environment.js\';\n        Ember.assert(msg, config[name]);\n\n        return config[name];\n      }\n    }\n\n    __exports__[\"default\"] = Ember.Object.extend({\n      initializeState: function() {\n        var storedSession = localStorage.getItem(this.localStorageKey());\n        try {\n          if(storedSession) {\n            storedSession = JSON.parse(storedSession);\n            this.setProperties(storedSession.user);\n            this.setPrefilter();\n          }\n        } catch(e) {\n          // Swallow this error since it\'s a JSON parse error\n        }\n      }.on(\'init\'),\n\n      signInUrl:          assertConfig(\'signInUrl\'),\n      signUpUrl:          assertConfig(\'signUpUrl\'),\n      facebookSignInUrl:  assertConfig(\'facebookSignInUrl\'),\n      googleSignInUrl:    assertConfig(\'googleSignInUrl\'),\n      resetPasswordUrl:   assertConfig(\'resetPasswordUrl\'),\n\n      authTokenKey: function() {\n        return config.authTokenKey || \'access_token\';\n      },\n\n      localStorageKey: function() {\n        return config.sessionLocalStorageKey || \'ember-cordova-auth\';\n      },\n\n      save: function(data) {\n        localStorage.setItem(this.localStorageKey(), JSON.stringify(data));\n        this.setProperties(data.user);\n      },\n\n      isSignedIn: Ember.computed.notEmpty(config.authTokenKey),\n\n      signOut: function() {\n        var session = this;\n\n        return new Ember.RSVP.Promise(function(resolve, reject) {\n          try {\n            localStorage.removeItem(session.localStorageKey());\n            Ember.keys(session).forEach(function(key){\n              session.set(key, null);\n            });\n            session.set(\'isSignedIn\', false);\n            resolve();\n          } catch(e) {\n            reject(e);\n          }\n        });\n      },\n\n      _postData: function(url, data){\n        var session = this;\n        return new Ember.RSVP.Promise(function(resolve, reject) {\n          icAjax(url, {\n            method: \'POST\',\n            dataType: \'json\',\n            data: JSON.stringify(data),\n            contentType: \'application/json\'\n          }).then(function(userData) {\n            if(get(userData.user, session.authTokenKey())) {\n              session.save(userData);\n              session.set(\'isSignedIn\', true);\n              session.setPrefilter();\n              resolve(userData);\n            } else {\n              reject(\'An \' + session.authTokenKey() + \' must be present in the session creation response.\');\n            }\n          }, function(err) {\n            session.set(\'isSignedIn\', false);\n            reject(err);\n          });\n        });\n      },\n\n      signIn: function(data) {\n        return this._postData(this.signInUrl(), data);\n      },\n\n      signUp: function(data) {\n        return this._postData(this.signUpUrl(), data);\n      },\n\n      resetPassword: function(data) {\n        var session = this;\n        return new Ember.RSVP.Promise(function(resolve, reject) {\n          icAjax(session.resetPasswordUrl(), {\n            method: \'POST\',\n            dataType: \'json\',\n            data: JSON.stringify(data),\n            contentType: \'application/json\'\n          }).then(resolve, reject);\n        });\n      },\n\n      signInWithFacebook: function(permissions) {\n        var session = this;\n        return Facebook.signIn(permissions).then(function(response) {\n          return session._postData(session.facebookSignInUrl(), response);\n        });\n      },\n\n      signInWithGoogle: function(settings) {\n        var session = this;\n        return Google.signIn(settings).then(function(response) {\n          return session._postData(session.googleSignInUrl(), response);\n        });\n      },\n\n      setPrefilter: function() {\n        var authToken = this.get(this.authTokenKey());\n\n        if(Ember.isNone(authToken)) {\n          return false;\n        }\n\n        Ember.$.ajaxPrefilter(function(options) {\n          if (!options.beforeSend) {\n            options.beforeSend = function (xhr) {\n              xhr.setRequestHeader(\'Authorization\', authToken);\n            };\n          }\n        });\n\n        return true;\n      }\n    });\n  });//# sourceURL=wecudos/services/session.js");

;eval("define(\"wecudos/utils/facebook\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* globals facebookConnectPlugin */\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = {\n      signIn: function(permissions) {\n        if(typeof facebookConnectPlugin !== \'undefined\') {\n          return new Ember.RSVP.Promise(function(resolve, reject){\n            facebookConnectPlugin.login(permissions, function(res) {\n              if(res.authResponse.accessToken) {\n                resolve(res);\n              } else {\n                reject(\'Error authenticating with Facebook. Please sign up or in with an email and password.\');\n              }\n            }, reject);\n          });\n        } else {\n          return Ember.RSVP.reject(\'Facebook login only available in app\');\n        }\n      }\n    };\n  });//# sourceURL=wecudos/utils/facebook.js");

;eval("define(\"wecudos/utils/google\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* globals plugins */\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = {\n      signIn: function(settings) {\n        if (typeof plugins === undefined) {\n          var msg = \'Plugins are only available on the simulator or \';\n          msg += \'on a real device.\';\n          return Ember.RSVP.reject(msg);\n        }\n        if (typeof plugins.googleplus === undefined) {\n          var msg = \'The google plus plugin was not found. \';\n          msg += \'(https://github.com/poetic/cordova-plugin-\';\n          msg += \'googleplus)\'\n          return Ember.RSVP.reject(msg);\n        }\n        return new Ember.RSVP.Promise(function(resolve, reject) {\n          plugins.googleplus.login(settings, resolve, reject);\n        });\n      }\n    };\n  });//# sourceURL=wecudos/utils/google.js");

;eval("define(\"wecudos/initializers/export-application-global\", \n  [\"ember\",\"wecudos/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=wecudos/initializers/export-application-global.js");

;eval("define(\"wecudos/initializers/in-app-livereload\", \n  [\"wecudos/config/environment\",\"ember-cli-cordova/initializers/in-app-livereload\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    /* globals cordova */\n\n    var config = __dependency1__[\"default\"];\n    var reloadInitializer = __dependency2__[\"default\"];\n\n    var inAppReload = reloadInitializer.initialize;\n\n    var initialize = function(container, app) {\n      if(typeof cordova === \'undefined\' ||\n          config.environment !== \'development\' ||\n          (config.cordova &&\n            (!config.cordova.liveReload || !config.cordova.liveReload.enabled))) {\n        return;\n      }\n\n      return inAppReload(container, app, config);\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'cordova:in-app-livereload\',\n      initialize: initialize\n    };\n  });//# sourceURL=wecudos/initializers/in-app-livereload.js");

;eval("define(\"wecudos/initializers/liquid-fire\", \n  [\"liquid-fire\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var initialize = __dependency1__.initialize;\n    var Ember = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name: \'liquid-fire\',\n\n      initialize: function(container, application) {\n        if (!Ember.$.Velocity) {\n          Ember.warn(\"Velocity.js is missing\");\n        } else {\n          var version = Ember.$.Velocity.version;\n          var recommended = [0, 11, 8];\n          if (Ember.compare(recommended, [version.major, version.minor, version.patch]) === 1) {\n            Ember.warn(\"You should probably upgrade Velocity.js, recommended minimum is \" + recommended.join(\'.\'));\n          }\n        }\n\n        initialize(container, container.lookupFactory(\'transitions:main\'));\n\n        if (Ember.testing) {\n          Ember.Test.registerWaiter(function(){\n            return container.lookup(\'transitions:map\').runningTransitions() === 0;\n          });\n        }\n      }\n    };\n  });//# sourceURL=wecudos/initializers/liquid-fire.js");

;eval("define(\"wecudos/initializers/open-tok-service\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function initialize(container, application) {\n      application.inject(\'component:openTok\', \'openTok\', \'service:open-tok\');\n    }\n\n    __exports__.initialize = initialize;__exports__[\"default\"] = {\n      name: \'open-tok-service\',\n      initialize: initialize\n    };\n  });//# sourceURL=wecudos/initializers/open-tok-service.js");

;eval("define(\"wecudos/models/user\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n      id: null,\n      name: null,\n      isPro: false,\n      token: null\n    });\n  });//# sourceURL=wecudos/models/user.js");

;eval("define(\"wecudos/pods/components/open-tok/component\", \n  [\"ember\",\"wecudos/models/user\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var User = __dependency2__[\"default\"];\n\n    //TODO: sessionId should been generated at server and send to app.\n    var sessionId = \"2_MX40NTA5MzY3Mn5-MTQxNzA3MzM4Njk4MH5RbWVPNXNadUxibXBReWZiYjNCUlVGVUx-fg\";\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      init: function() {\n        this._super();\n        /**\n         * Local User is the user who is using application.\n         * Remote User is another user.\n         * In this demo app I create them at init hook. But at real you need link current session user to localUser,\n         * and when clicking on button \'Start Consultation\' set the remoteUser.\n         */\n        this.setProperties({\n          pro: User.create({\n            id: 1,\n            name: \'Bob\',\n            token: \'T1==cGFydG5lcl9pZD00NTA5MzY3MiZzaWc9OGE4ZTExNGNkODRiOGRjZGJlMzk4YmVlMTYzNTYxODUzNTU2ZDU0Njpyb2xlPXB1Ymxpc2hlciZzZXNzaW9uX2lkPTJfTVg0ME5UQTVNelkzTW41LU1UUXhOekEzTXpNNE5qazRNSDVSYldWUE5YTmFkVXhpYlhCUmVXWmlZak5DVWxWR1ZVeC1mZyZjcmVhdGVfdGltZT0xNDE3MDczNDI2Jm5vbmNlPTAuMDY5MDkwNTI4Nzc1Nzk4MTMmZXhwaXJlX3RpbWU9MTQxOTY2NTM1Mg==\'\n          }),\n\n          user: User.create({\n            id: 2,\n            name: \'Jon\',\n            token: \'T1==cGFydG5lcl9pZD00NTA5MzY3MiZzaWc9Y2YzMjgwOTJhMGI4MTFhYjEzNTM1OTQwYTJhMjA1ZTgxZTg3ZDEyZjpyb2xlPXB1Ymxpc2hlciZzZXNzaW9uX2lkPTJfTVg0ME5UQTVNelkzTW41LU1UUXhOekEzTXpNNE5qazRNSDVSYldWUE5YTmFkVXhpYlhCUmVXWmlZak5DVWxWR1ZVeC1mZyZjcmVhdGVfdGltZT0xNDE3MDczNDQ3Jm5vbmNlPTAuMDA5MDU0ODA1NDQzOTQ4MjEmZXhwaXJlX3RpbWU9MTQxOTY2NTM1Mg==\'\n          })\n        });\n      },\n\n      willInsertElement: function() {\n        this.set(\'openTok.component\', this);\n      },\n\n      willDestroyElement: function() {\n        this.set(\'openTok.component\', null);\n      },\n\n      localVideoElement: \'local-video\',\n      localVideoOptions: {\n        insertMode: \"append\",\n        name: Ember.computed.alias(\'currentUser.name\'),\n        width:300,\n        height:200\n      },\n\n      remoteVideoElement: \'remote-video\',\n      remoteVideoOptions: {\n        insertMode: \"append\",\n        name: Ember.computed.alias(\'currentUser.name\'),\n        width:400,\n        height:300\n      },\n\n      isCallingNow: Ember.computed.alias(\'openTok.isCallingNow\'),\n      isOutgoingCall: Ember.computed.alias(\'openTok.isOutgoingCall\'),\n      isProConnected: Ember.computed.notEmpty(\'opetTok.connections\'),\n\n      isInSession: function() {\n        return this.get(\'openTok.isSessionConnected\') && this.get(\'openTok.isConnectionCreated\');\n      }.property(\'openTok.isSessionConnected\', \'openTok.isConnectionCreated\'),\n\n      /**\n       * Only for test application\n       */\n      isPro: false,\n      currentUser: function() {\n        return this.get(\'isPro\') ? this.get(\'pro\') : this.get(\'user\');\n      }.property(\'pro\', \'user\', \'isPro\'),\n\n      pro: null,\n      user: null,\n\n      actions: {\n        connect: function() {\n          this.openTok.connect(this.get(\'currentUser.token\'), sessionId);\n        },\n\n        disconnect: function() {\n          this.openTok.disconnect();\n        },\n\n        publish: function() {\n          this.openTok.publish()\n        },\n\n        beginCall: function() {\n          this.openTok.beginCall();\n        },\n\n        endCall: function() {\n          this.openTok.endCall();\n        }\n      }\n    });\n  });//# sourceURL=wecudos/pods/components/open-tok/component.js");

;eval("define(\"wecudos/pods/components/open-tok/template\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\" pro \");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\" user \");\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <h2>Local Video</h2>\\n    <div id=\\\"local-video\\\"></div>\\n\\n    <h2>Remote Video</h2>\\n    <div id=\\\"remote-video\\\"></div>\\n\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"isCallingNow\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      \");\n      stack1 = helpers[\'if\'].call(depth0, \"isProConnected\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program7(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n          <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"endCall\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Finish Call</button>\\n      \");\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      \");\n      stack1 = helpers.unless.call(depth0, \"isPro\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"isOutgoingCall\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(13, program13, data),fn:self.program(11, program11, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      \");\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n            wait please...\\n        \");\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n            <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"publish\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Start Call</button>\\n        \");\n      return buffer;\n      }\n\n    function program15(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n    <br>\\n    <label>\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"isPro\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\" is Pro</label>\\n    <br>\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"connect\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Connect to session</button>\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"My name \");\n      stack1 = helpers._triageMustache.call(depth0, \"currentUser.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" and I am \");\n      stack1 = helpers[\'if\'].call(depth0, \"isPro\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<br>\\n\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"isInSession\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(15, program15, data),fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=wecudos/pods/components/open-tok/template.js");

;eval("define(\"wecudos/router\", \n  [\"ember\",\"wecudos/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=wecudos/router.js");

;eval("define(\"wecudos/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        back: function() {\n          history.back();\n        },\n\n        closeModal: function() {\n          this.disconnectOutlet({\n            outlet: \'modal\',\n            parentView: \'application\'\n          });\n        },\n\n        openModal: function(name) {\n          this.render(name, {\n            into: \'application\',\n            outlet: \'modal\'\n          });\n        },\n\n        openLink: function(url) {\n          window.open(url, \'_system\');\n        }\n      }\n    });\n  });//# sourceURL=wecudos/routes/application.js");

;eval("define(\"wecudos/services/open-tok\", \n  [\"ember\",\"wecudos/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n      createSession: function(sessionId) {\n        OT.on(\'exception\', function(){\n          Ember.Logger.error(\'Exception\', event.code, event.message);\n        });\n\n        if (OT.checkSystemRequirements() === 1) {\n          var session = OT.initSession(config.openTok.apiKey, sessionId);\n\n          session.on({\n            streamCreated: Ember.run.bind(this, this.streamCreatedInSession),\n            streamDestroyed: Ember.run.bind(this, this.streamDestroyedInSession),\n            connectionCreated: Ember.run.bind(this, this.connectionCreated),\n            connectionDestroyed: Ember.run.bind(this, this.connectionDestroyed),\n            sessionConnected: Ember.run.bind(this, this.sessionConnected),\n            sessionDisconnected: Ember.run.bind(this, this.sessionDisconnected),\n            \"signal:begincall\": Ember.run.bind(this, this.signalBeginCall),\n            \"signal:acceptcall\": Ember.run.bind(this, this.signalAcceptCall),\n            \"signal:rejectcall\": Ember.run.bind(this, this.signalRejectCall),\n            \"signal:endcall\": Ember.run.bind(this, this.signalEndCall),\n            \"signal:initializecall\": Ember.run.bind(this, this.signalInitializeCall),\n          });\n\n          this.set(\'session\', session);\n        } else {\n          alert(\'Sorry, but your browser not support WebRTC\');\n        }\n      },\n\n      component: null,\n\n      session: null,\n\n      localStream: null,\n      remoteStream: null,\n      streams: [],\n      connections: [],\n      /**\n       * session.getPublisherForStream(stream) get publisher.\n       */\n      publisher: null,\n\n      /**\n       * session.getSubscribersForStream(stream) get subscribers.\n       */\n      subscribers: [],\n\n      isConnectionCreated: false,\n      isSessionConnected: false,\n\n      isOutgoingCall: function() {\n        return this.get(\'publisher\') && !this.get(\'subscribers.length\');\n      }.property(\'publisher\', \'subscribers.length\'),\n\n      isCallingNow: function() {\n        return this.get(\'publisher\') && this.get(\'subscribers.length\');\n      }.property(\'publisher\', \'subscribers.length\'),\n\n      //TODO: refactor\n      isIncomingCall: function() {\n        return this.get(\'stream\') && !this.get(\'publisher\') && !this.get(\'subscriber\');\n      }.property(\'stream\', \'publisher\', \'subscriber\'),\n\n      connect: function(token, sessionId) {\n        this.createSession(sessionId);\n\n        this.get(\'session\').connect(token, function(error) {\n          if (error) {\n            Ember.Logger.error(\"Error connecting: \", error);\n          } else {\n            Ember.Logger.debug(\"Connected to the session.\");\n          }\n        });\n      },\n\n      disconnect: function() {\n        this.get(\'session\').disconnect();\n        Ember.Logger.debug(\"Disconnected from the session.\");\n      },\n\n      publish: function() {\n        this._publish(this.get(\'component.localVideoElement\'), this.get(\'component.localVideoOptions\'));\n      },\n\n      _publish: function(targetElement, params) {\n        if (!this.get(\'publisher\')) {\n          var publisher = OT.initPublisher(targetElement, params);\n\n          publisher.on({\n            streamCreated: Ember.run.bind(this, this.streamCreatedByPublisher),\n            streamDestroyed: Ember.run.bind(this, this.streamDestroyedByPublisher),\n            destroyed: Ember.run.bind(this, this.publisherDestroyed),\n          });\n\n          this.set(\'publisher\', publisher);\n          this.get(\'session\').publish(publisher);\n        }\n      },\n\n      unpublish: function() {\n        var publisher = this.get(\'publisher\');\n        this.get(\'session\').unpublish(publisher);\n        publisher.destroy();\n      },\n\n      subscribe: function(stream) {\n        this._subscribe(stream, this.get(\'component.remoteVideoElement\'), this.get(\'component.remoteVideoOptions\'));\n      },\n\n      _subscribe: function(stream, targetElement, params) {\n        var session = this.get(\'session\');\n        if (stream.connection.connectionId !== session.connection.connectionId) {\n          targetElement = targetElement || this.get(\'component.remoteVideoElement\');\n          params = params || this.get(\'component.remoteVideoOptions\');\n\n          var subscriber = session.subscribe(stream, targetElement, params);\n          this.get(\'subscribers\').addObject(subscriber);\n        }\n      },\n\n      unsubscribe: function(stream) {\n        var subscriber = this.get(\'subscribers\').findBy(\'stream.streamId\', stream.streamId);\n        this.get(\'session\').unsubscribe(subscriber);\n        this.get(\'subscribers\').removeObject(subscriber);\n      },\n\n      sendSignal: function(params, callback) {\n        //TODO: if one session and many users and streams we can find by stream.connection.data(our user/pro)\n        callback = callback || function (error) {\n          if (error) {\n            Ember.Logger.error(\"signal error:\", error.reason);\n          } else {\n            Ember.Logger.debug(\"signal sent: begincall\");\n          }\n        };\n\n        this.get(\'session\').signal(params, callback);\n      },\n\n      initializeCall: function() {\n        this._initializeCall(this.get(\'connections.firstObject\'));\n      },\n\n      _initializeCall: function(connection) {\n        var localStream = this.get(\'localStream\');\n\n        this.sendSignal({\n          type: \"initializecall\",\n          to: connection,\n          data: {\n            streamId: localStream.streamId,\n            streamName: localStream.name\n          }\n        });\n      },\n\n      beginCall: function() {\n        //TODO: validate more than one stream\n        this._beginCall(this.get(\'streams.firstObject\'));\n      },\n\n      _beginCall: function(stream) {\n        var localStream = this.get(\'localStream\');\n\n        this.set(\'remoteStream\', stream);\n\n        this.sendSignal({\n          type: \"begincall\",\n          to: stream.connection,\n          data: {\n            streamId: localStream.streamId,\n            streamName: localStream.name\n          }\n        });\n      },\n\n      endCall: function() {\n        var remoteStream = this.get(\'remoteStream\'),\n          localStream = this.get(\'localStream\');\n\n        this.unsubscribe(remoteStream);\n\n        this.sendSignal({\n          type: \"endcall\",\n          to:  remoteStream.connection,\n          data: {\n            streamId: localStream.streamId,\n            streamName: localStream.name\n          }\n        });\n      },\n\n      acceptCall: function() {\n        var localStream = this.get(\'localStream\'),\n          remoteStream = this.get(\'streams.firstObject\');\n\n        this.sendSignal({\n          type: \"acceptcall\",\n          to: remoteStream.connection,\n          data: {\n            streamId: localStream.streamId,\n            streamName: localStream.name\n          }\n        });\n      },\n\n      /**\n       * Session Handlers\n       */\n\n      /**\n       * Fires in every local and remote new stream\n       * @param event\n       */\n      streamCreatedInSession: function(event) {\n        var session = this.get(\'session\');\n        if (event.stream.connection.connectionId !== session.connection.connectionId) {\n          this.get(\'streams\').addObject(event.stream);\n        }\n      },\n\n      /**\n       * Fires on every local and remote stop streaming\n       * @param event\n       */\n      streamDestroyedInSession: function(event) {\n        var session = this.get(\'session\');\n        if (event.stream.connection.connectionId !== session.connection.connectionId) {\n          this.get(\'streams\').removeObject(event.stream);\n        }\n      },\n\n      /**\n       * Fires on every local and remote connection.\n       * @param event\n       */\n      connectionCreated: function(event) {\n        var session = this.get(\'session\');\n        if (event.connection.connectionId === session.connection.connectionId) {\n          this.set(\'isConnectionCreated\', true);\n        } else {\n          this.get(\'connections\').addObject(event.connection);\n        }\n      },\n\n      /**\n       * Fires on every local and remote connection.\n       * @param event\n       */\n      connectionDestroyed: function(event) {\n        var session = this.get(\'session\');\n        if (event.connection.connectionId === session.connection.connectionId) {\n          this.set(\'isConnectionCreated\', false);\n        } else {\n          this.get(\'connections\').removeObject(event.connection);\n        }\n      },\n\n      /**\n       * Fires once at local application\n       * @param event\n       */\n      sessionConnected: function(event) {\n        this.set(\'isSessionConnected\', true);\n      },\n\n      /**\n       * Fires once at local application\n       * @param event\n       */\n      sessionDisconnected: function(event) {\n        this.set(\'isSessionConnected\', false);\n\n        //TODO: check if publisher, subscriber, stream props is null\n        //alert(this.get(\'publisher\'));\n        //alert(this.get(\'subscribers\'));\n        //alert(this.get(\'streams\'));\n        //alert(this.get(\'localStream\'));\n        //alert(this.get(\'remoteStream\'));\n      },\n\n      /**\n       * Signal Session Handlers\n       * @param event\n       */\n\n      signalBeginCall: function(event) {\n        var name = event.data.name,\n          streams = this.get(\'streams\'),\n          localStream = this.get(\'localStream\'),\n          stream = streams.findBy(\'streamId\', event.data.streamId);\n\n        if (confirm(\'Accept call from \' + name + \' ?\')) {\n          this.subscribe(stream);\n\n          this.sendSignal({\n            type: \"acceptcall\",\n            to: stream.connection,\n            data: {\n              streamId: localStream.streamId,\n              streamName: localStream.name\n            }\n          });\n        } else {\n          this.sendSignal({\n            type: \"rejectcall\",\n            to: stream.connection,\n            data: {\n              streamId: null,\n              streamName: null\n            }\n          });\n        }\n      },\n\n      signalAcceptCall: function(event) {\n        var name = event.data.name,\n          streams = this.get(\'streams\'),\n          localStream = this.get(\'localStream\'),\n          stream = streams.findBy(\'streamId\', event.data.streamId);\n\n        this.subscribe(stream);\n      },\n\n      signalRejectCall: function(event) {\n        var name = event.data.name,\n          streams = this.get(\'streams\'),\n          localStream = this.get(\'localStream\'),\n          stream = streams.findBy(\'streamId\', event.data.streamId);\n\n        this.unpublish(this.get(\'publisher\'));\n        this.disconnect();\n\n        alert(\'Call rejected by \' + name);\n      },\n\n      signalEndCall: function(event) {\n        var name = event.data.name,\n          streams = this.get(\'streams\'),\n          localStream = this.get(\'localStream\'),\n          stream = streams.findBy(\'streamId\', event.data.streamId);\n\n        this.unsubscribe(stream);\n      },\n\n      signalInitializeCall: function(event) {\n        var name = event.data.name,\n          streams = this.get(\'streams\'),\n          localStream = this.get(\'localStream\'),\n          stream = streams.findBy(\'streamId\', event.data.streamId);\n\n        //event.from return initializator\n        if (confirm(\'Accept call from \' + name + \' ?\')) {\n          this.subscribe(stream);\n          this.publish();\n        } else {\n          this.sendSignal({\n            type: \"rejectcall\",\n            to: stream.connection,\n            data: {\n              streamId: null,\n              streamName: null\n            }\n          });\n          this.disconnect();\n        }\n      },\n\n      /**\n       * Publisher Handlers\n       * @param event\n       */\n\n      streamCreatedByPublisher: function(event) {\n        this.set(\'localStream\', event.stream);\n        if (Em.isEmpty(this.get(\'subscribers\'))) {\n          this.initializeCall();\n        } else {\n          this.acceptCall()\n        }\n      },\n\n      streamDestroyedByPublisher: function (event) {\n        this.set(\'localStream\', null);\n      },\n\n      publisherDestroyed: function(event) {\n        this.set(\'publisher\', null);\n      }\n    });\n  });//# sourceURL=wecudos/services/open-tok.js");

;eval("define(\"wecudos/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h1>OpenTok Test app.</h1>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"open-tok\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'liquid-outlet\'] || (depth0 && depth0[\'liquid-outlet\']),options={hash:{\n        \'name\': (\"main\")\n      },hashTypes:{\'name\': \"STRING\"},hashContexts:{\'name\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"liquid-outlet\", options))));\n      data.buffer.push(\"\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'liquid-outlet\'] || (depth0 && depth0[\'liquid-outlet\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"modal\", options) : helperMissing.call(depth0, \"liquid-outlet\", \"modal\", options))));\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"liquid-modal\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=wecudos/templates/application.js");

;eval("define(\"wecudos/templates/cdv-generic-nav-bar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n  <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"leftButton\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"nav.leftButton.icon\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = helpers._triageMustache.call(depth0, \"nav.leftButton.text\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </button>\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n      <i \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":icon nav.leftButton.icon\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></i>\\n    \");\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n  <h1>\\n    \");\n      stack1 = helpers._triageMustache.call(depth0, \"nav.title.text\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </h1>\\n\");\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n  <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"rightButton\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"nav.rightButton.icon\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = helpers._triageMustache.call(depth0, \"nav.rightButton.text\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </button>\\n\");\n      return buffer;\n      }\n    function program7(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n      <i \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":icon nav.rightButton.icon\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></i>\\n    \");\n      return buffer;\n      }\n\n      stack1 = helpers[\'if\'].call(depth0, \"nav.leftButton.text\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"nav.title.text\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"nav.rightButton.text\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=wecudos/templates/cdv-generic-nav-bar.js");

;eval("define(\"wecudos/templates/components/cdv-nav-bar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"yield\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=wecudos/templates/components/cdv-nav-bar.js");

;eval("define(\"wecudos/templates/components/liquid-modal\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'lm-container\'] || (depth0 && depth0[\'lm-container\']),options={hash:{\n        \'action\': (\"escape\")\n      },hashTypes:{\'action\': \"STRING\"},hashContexts:{\'action\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"lm-container\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n    <div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":lf-dialog cc.options.dialogClass\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" role=\\\"dialog\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'aria-labelledby\': (\"cc.options.ariaLabelledBy\"),\n        \'aria-label\': (\"cc.options.ariaLabel\")\n      },hashTypes:{\'aria-labelledby\': \"STRING\",\'aria-label\': \"STRING\"},hashContexts:{\'aria-labelledby\': depth0,\'aria-label\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n      \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"innerView\", {hash:{\n        \'dismiss\': (\"dismiss\")\n      },hashTypes:{\'dismiss\': \"STRING\"},hashContexts:{\'dismiss\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n    </div>\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers[\'lf-overlay\'] || (depth0 && depth0[\'lf-overlay\']),options={hash:{\n        \'clickAway\': (\"outsideClick\")\n      },hashTypes:{\'clickAway\': \"STRING\"},hashContexts:{\'clickAway\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"lf-overlay\", options))));\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'liquid-with\'] || (depth0 && depth0[\'liquid-with\']),options={hash:{\n        \'class\': (\"lm-with\"),\n        \'containerless\': (true)\n      },hashTypes:{\'class\': \"STRING\",\'containerless\': \"BOOLEAN\"},hashContexts:{\'class\': depth0,\'containerless\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"currentContext\", \"as\", \"cc\", options) : helperMissing.call(depth0, \"liquid-with\", \"currentContext\", \"as\", \"cc\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=wecudos/templates/components/liquid-modal.js");

;eval("define(\"wecudos/templates/components/modal-dialog\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"overlay\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"close\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n  <div class=\\\"modal\\\">\\n    <div class=\\\"close\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"close\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">X</div>\\n    <div \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, {hash:{\n        \'bubbles\': (false)\n      },hashTypes:{\'bubbles\': \"BOOLEAN\"},hashContexts:{\'bubbles\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n      \");\n      stack1 = helpers._triageMustache.call(depth0, \"yield\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n  </div>\\n</div>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=wecudos/templates/components/modal-dialog.js");

;eval("define(\"wecudos/templates/liquid-with-self\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=wecudos/templates/liquid-with-self.js");

;eval("define(\"wecudos/templates/liquid-with\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"with-apply\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=wecudos/templates/liquid-with.js");

;eval("define(\"wecudos/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/application.js should pass jshint\', function() { \n      ok(true, \'adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/adapters/application.jshint.js");

;eval("define(\"wecudos/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/app.jshint.js");

;eval("define(\"wecudos/tests/components/modal-dialog.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - components\');\n    test(\'components/modal-dialog.js should pass jshint\', function() { \n      ok(true, \'components/modal-dialog.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/components/modal-dialog.jshint.js");

;eval("define(\"wecudos/tests/helpers/resolver\", \n  [\"ember/resolver\",\"wecudos/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=wecudos/tests/helpers/resolver.js");

;eval("define(\"wecudos/tests/helpers/start-app\", \n  [\"ember\",\"wecudos/app\",\"wecudos/router\",\"wecudos/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=wecudos/tests/helpers/start-app.js");

;eval("define(\"wecudos/tests/initializers/open-tok-service.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - initializers\');\n    test(\'initializers/open-tok-service.js should pass jshint\', function() { \n      ok(true, \'initializers/open-tok-service.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/initializers/open-tok-service.jshint.js");

;eval("define(\"wecudos/tests/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/user.js should pass jshint\', function() { \n      ok(true, \'models/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/models/user.jshint.js");

;eval("define(\"wecudos/tests/pods/components/open-tok/component.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - pods/components/open-tok\');\n    test(\'pods/components/open-tok/component.js should pass jshint\', function() { \n      ok(false, \'pods/components/open-tok/component.js should pass jshint.\\npods/components/open-tok/component.js: line 84, col 29, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=wecudos/tests/pods/components/open-tok/component.jshint.js");

;eval("define(\"wecudos/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/router.jshint.js");

;eval("define(\"wecudos/tests/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/application.js should pass jshint\', function() { \n      ok(true, \'routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/routes/application.jshint.js");

;eval("define(\"wecudos/tests/services/open-tok.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - services\');\n    test(\'services/open-tok.js should pass jshint\', function() { \n      ok(false, \'services/open-tok.js should pass jshint.\\nservices/open-tok.js: line 382, col 24, Missing semicolon.\\nservices/open-tok.js: line 6, col 5, \\\'OT\\\' is not defined.\\nservices/open-tok.js: line 10, col 9, \\\'OT\\\' is not defined.\\nservices/open-tok.js: line 11, col 21, \\\'OT\\\' is not defined.\\nservices/open-tok.js: line 90, col 23, \\\'OT\\\' is not defined.\\nservices/open-tok.js: line 379, col 9, \\\'Em\\\' is not defined.\\nservices/open-tok.js: line 266, col 30, \\\'event\\\' is defined but never used.\\nservices/open-tok.js: line 274, col 33, \\\'event\\\' is defined but never used.\\nservices/open-tok.js: line 320, col 9, \\\'name\\\' is defined but never used.\\nservices/open-tok.js: line 322, col 7, \\\'localStream\\\' is defined but never used.\\nservices/open-tok.js: line 331, col 7, \\\'localStream\\\' is defined but never used.\\nservices/open-tok.js: line 332, col 7, \\\'stream\\\' is defined but never used.\\nservices/open-tok.js: line 341, col 9, \\\'name\\\' is defined but never used.\\nservices/open-tok.js: line 343, col 7, \\\'localStream\\\' is defined but never used.\\nservices/open-tok.js: line 352, col 7, \\\'localStream\\\' is defined but never used.\\nservices/open-tok.js: line 386, col 41, \\\'event\\\' is defined but never used.\\nservices/open-tok.js: line 390, col 32, \\\'event\\\' is defined but never used.\\n\\n17 errors\'); \n    });\n  });//# sourceURL=wecudos/tests/services/open-tok.jshint.js");

;eval("define(\"wecudos/tests/test-helper\", \n  [\"wecudos/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=wecudos/tests/test-helper.js");

;eval("define(\"wecudos/tests/transitions.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'transitions.js should pass jshint\', function() { \n      ok(true, \'transitions.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/transitions.jshint.js");

;eval("define(\"wecudos/tests/unit/components/open-tok-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    var test = __dependency1__.test;\n\n    moduleForComponent(\'open-tok\', \'OpenTokComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component._state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=wecudos/tests/unit/components/open-tok-test.js");

;eval("define(\"wecudos/tests/unit/models/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'user\', \'User\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=wecudos/tests/unit/models/user-test.js");

;eval("define(\"wecudos/tests/unit/services/open-tok-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'service:open-tok\', \'OpenTokService\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'service:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var service = this.subject();\n      ok(service);\n    });\n  });//# sourceURL=wecudos/tests/unit/services/open-tok-test.js");

;eval("define(\"wecudos/tests/wecudos/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - wecudos/tests/helpers\');\n    test(\'wecudos/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'wecudos/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/wecudos/tests/helpers/resolver.jshint.js");

;eval("define(\"wecudos/tests/wecudos/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - wecudos/tests/helpers\');\n    test(\'wecudos/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'wecudos/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/wecudos/tests/helpers/start-app.jshint.js");

;eval("define(\"wecudos/tests/wecudos/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - wecudos/tests\');\n    test(\'wecudos/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'wecudos/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/wecudos/tests/test-helper.jshint.js");

;eval("define(\"wecudos/tests/wecudos/tests/unit/components/open-tok-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - wecudos/tests/unit/components\');\n    test(\'wecudos/tests/unit/components/open-tok-test.js should pass jshint\', function() { \n      ok(true, \'wecudos/tests/unit/components/open-tok-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/wecudos/tests/unit/components/open-tok-test.jshint.js");

;eval("define(\"wecudos/tests/wecudos/tests/unit/models/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - wecudos/tests/unit/models\');\n    test(\'wecudos/tests/unit/models/user-test.js should pass jshint\', function() { \n      ok(true, \'wecudos/tests/unit/models/user-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/wecudos/tests/unit/models/user-test.jshint.js");

;eval("define(\"wecudos/tests/wecudos/tests/unit/services/open-tok-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - wecudos/tests/unit/services\');\n    test(\'wecudos/tests/unit/services/open-tok-test.js should pass jshint\', function() { \n      ok(true, \'wecudos/tests/unit/services/open-tok-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=wecudos/tests/wecudos/tests/unit/services/open-tok-test.jshint.js");

;eval("define(\"wecudos/transitions\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = function() {\n\n    }\n  });//# sourceURL=wecudos/transitions.js");

;eval("define(\"wecudos/transitions/cross-fade\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    // BEGIN-SNIPPET cross-fade-definition\n    var animate = __dependency1__.animate;\n    var stop = __dependency1__.stop;\n    var Promise = __dependency1__.Promise;\n    __exports__[\"default\"] = function crossFade(oldView, insertNewView, opts) {\n      stop(oldView);\n      return insertNewView().then(function(newView) {\n        return Promise.all([\n          animate(oldView, {opacity: 0}, opts),\n          animate(newView, {opacity: [1, 0]}, opts)\n        ]);\n      });\n    }\n    // END-SNIPPET\n  });//# sourceURL=wecudos/transitions/cross-fade.js");

;eval("define(\"wecudos/transitions/fade\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    // BEGIN-SNIPPET fade-definition\n    var isAnimating = __dependency1__.isAnimating;\n    var finish = __dependency1__.finish;\n    var timeSpent = __dependency1__.timeSpent;\n    var animate = __dependency1__.animate;\n    var stop = __dependency1__.stop;\n    __exports__[\"default\"] = function fade(oldView, insertNewView, opts) {\n      var firstStep,\n          outOpts = opts;\n\n      if (isAnimating(oldView, \'fade-out\')) {\n        // if the old view is already fading out, let it finish.\n        firstStep = finish(oldView, \'fade-out\');\n      } else {\n        if (isAnimating(oldView, \'fade-in\')) {\n          // if the old view is partially faded in, scale its fade-out\n          // duration appropriately.\n          outOpts = { duration: timeSpent(oldView, \'fade-in\') };\n        }\n        stop(oldView);\n        firstStep = animate(oldView, {opacity: 0}, outOpts, \'fade-out\');\n      }\n\n      return firstStep.then(insertNewView).then(function(newView){\n        return animate(newView, {opacity: [1, 0]}, opts, \'fade-in\');\n      });\n    }\n    // END-SNIPPET\n  });//# sourceURL=wecudos/transitions/fade.js");

;eval("define(\"wecudos/transitions/flex-grow\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var animate = __dependency1__.animate;\n    var stop = __dependency1__.stop;\n    var Promise = __dependency1__.Promise;\n    __exports__[\"default\"] = function flexGrow(oldView, insertNewView, opts) {\n      stop(oldView);\n      return insertNewView().then(function(newView) {\n        return Promise.all([\n          animate(oldView, {\'flex-grow\': 0}, opts),\n          animate(newView, {\'flex-grow\': [1, 0]}, opts)\n        ]);\n      });\n    }\n  });//# sourceURL=wecudos/transitions/flex-grow.js");

;eval("define(\"wecudos/transitions/modal-popup\", \n  [\"ember\",\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Promise = __dependency2__.Promise;\n    var Velocity = Ember.$.Velocity;\n\n    function hideModal(oldView) {\n      var box, obscure;\n      if (!oldView ||\n          !(box = oldView.$(\'.lm-container > div\')) ||\n          !(box = box[0]) ||\n          !(obscure = oldView.$(\'.lf-overlay\')) ||\n          !(obscure = obscure[0])) {\n        return Promise.resolve();\n      }\n\n      return Promise.all([\n        Velocity.animate(obscure, {opacity: [0, 0.5]}, {duration: 250}),\n        Velocity.animate(box, {scale: [0, 1]}, {duration: 250})\n      ]);\n    }\n\n    function revealModal(insertNewView) {\n      return insertNewView().then(function(newView){\n        var box, obscure;\n        if (!newView ||\n            !(box = newView.$(\'.lm-container > div\')[0]) ||\n            !(obscure = newView.$(\'.lf-overlay\')[0])) {\n          return;\n        }\n\n        // we\'re not going to animate the whole view, rather we\'re going\n        // to animate two pieces of it separately. So we move the view\n        // properties down onto the individual elements, so that the\n        // animate function can reveal them at precisely the right time.\n        Ember.$(box).css({\n          display: \'none\'\n        });\n\n        Ember.$(obscure).css({\n          display: \'none\'\n        });\n        newView.$().css({\n          display: \'\',\n          visibility: \'\'\n        });\n\n        return Promise.all([\n          Velocity.animate(obscure, {opacity: [0.5, 0]}, {duration: 250, display: \'\'}),\n          Velocity.animate(box, {scale: [1, 0]}, {duration: 250, display: \'\'})\n        ]);\n      });\n    }\n\n    __exports__[\"default\"] = function modalPopup(oldView, insertNewView) {\n      return hideModal(oldView).then(function() {\n        return revealModal(insertNewView);\n      });\n    }\n  });//# sourceURL=wecudos/transitions/modal-popup.js");

;eval("define(\"wecudos/transitions/move-over\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var stop = __dependency1__.stop;\n    var animate = __dependency1__.animate;\n    var Promise = __dependency1__.Promise;\n    var isAnimating = __dependency1__.isAnimating;\n    var finish = __dependency1__.finish;\n\n    __exports__[\"default\"] = function moveOver(oldView, insertNewView, dimension, direction, opts) {\n      var oldParams = {},\n          newParams = {},\n          firstStep,\n          property,\n          measure;\n\n      if (dimension.toLowerCase() === \'x\') {\n        property = \'translateX\';\n        measure = \'width\';\n      } else {\n        property = \'translateY\';\n        measure = \'height\';\n      }\n\n      if (isAnimating(oldView, \'moving-in\')) {\n        firstStep = finish(oldView, \'moving-in\');\n      } else {\n        stop(oldView);\n        firstStep = Promise.resolve();\n      }\n\n\n      return firstStep.then(insertNewView).then(function(newView){\n        if (newView && newView.$() && oldView && oldView.$()) {\n          var sizes = [parseInt(newView.$().css(measure), 10),\n                       parseInt(oldView.$().css(measure), 10)];\n          var bigger = Math.max.apply(null, sizes);\n          oldParams[property] = (bigger * direction) + \'px\';\n          newParams[property] = [\"0px\", (-1 * bigger * direction) + \'px\'];\n        } else {\n          oldParams[property] = (100 * direction) + \'%\';\n          newParams[property] = [\"0%\", (-100 * direction) + \'%\'];\n        }\n\n        return Promise.all([\n          animate(oldView, oldParams, opts),\n          animate(newView, newParams, opts, \'moving-in\')\n        ]);\n      });\n    }\n  });//# sourceURL=wecudos/transitions/move-over.js");

;eval("define(\"wecudos/transitions/scroll-then\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function() {\n      Ember.assert(\n        \"You must provide a transition name as the first argument to scrollThen. Example: this.use(\'scrollThen\', \'toLeft\')\",\n        \'string\' === typeof arguments[2]\n      );\n\n      var el = document.getElementsByTagName(\'html\'),\n          transitionArgs = Array.prototype.slice.call(arguments, 0, 2),\n          nextTransition = this.lookup(arguments[2]),\n          self = this,\n          options = arguments[3] || {};\n\n      Ember.assert(\n        \"The second argument to scrollThen is passed to Velocity\'s scroll function and must be an object\",\n        \'object\' === typeof options\n      );\n\n      // set scroll options via: this.use(\'scrollThen\', \'ToLeft\', {easing: \'spring\'})\n      options = Ember.merge({duration: 500, offset: 0}, options);\n\n      // additional args can be passed through after the scroll options object\n      // like so: this.use(\'scrollThen\', \'moveOver\', {duration: 100}, \'x\', -1);\n      transitionArgs.push.apply(transitionArgs, Array.prototype.slice.call(arguments, 4));\n\n      return window.$.Velocity(el, \'scroll\', options).then(function() {\n        nextTransition.apply(self, transitionArgs);\n      });\n    }\n  });//# sourceURL=wecudos/transitions/scroll-then.js");

;eval("define(\"wecudos/transitions/to-down\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var curryTransition = __dependency1__.curryTransition;\n    __exports__[\"default\"] = curryTransition(\"move-over\", \'y\', 1);\n  });//# sourceURL=wecudos/transitions/to-down.js");

;eval("define(\"wecudos/transitions/to-left\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var curryTransition = __dependency1__.curryTransition;\n    __exports__[\"default\"] = curryTransition(\"move-over\", \'x\', -1);\n  });//# sourceURL=wecudos/transitions/to-left.js");

;eval("define(\"wecudos/transitions/to-right\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var curryTransition = __dependency1__.curryTransition;\n    __exports__[\"default\"] = curryTransition(\"move-over\", \'x\', 1);\n  });//# sourceURL=wecudos/transitions/to-right.js");

;eval("define(\"wecudos/transitions/to-up\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var curryTransition = __dependency1__.curryTransition;\n    __exports__[\"default\"] = curryTransition(\"move-over\", \'y\', -1);\n  });//# sourceURL=wecudos/transitions/to-up.js");

;eval("define(\"wecudos/views/liquid-child\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ContainerView.extend({\n      classNames: [\'liquid-child\'],\n      resolveInsertionPromise: Ember.on(\'didInsertElement\', function(){\n        // Children start out hidden and invisible.\n        // Measurement will `show` them and Velocity will make them visible.\n        // This prevents a flash of pre-animated content.\n        this.$().css({visibility: \'hidden\'}).hide();\n        if (this._resolveInsertion) {\n          this._resolveInsertion(this);\n        }\n      })\n    });\n  });//# sourceURL=wecudos/views/liquid-child.js");

;eval("define(\"wecudos/views/liquid-if\", \n  [\"wecudos/views/liquid-outlet\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var LiquidOutlet = __dependency1__[\"default\"];\n    var Ember = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = LiquidOutlet.extend({\n      liquidUpdate: Ember.on(\'init\', Ember.observer(\'showFirst\', function(){\n        var template = this.get(\'templates\')[this.get(\'showFirst\') ? 0 : 1];\n        if (!template || template === Ember.Handlebars.VM.noop) {\n          this.set(\'currentView\', null);\n          return;\n        }\n        var view = Ember._MetamorphView.create({\n          container: this.container,\n          template: template,\n          liquidParent: this,\n          contextBinding: \'liquidParent.context\',\n          liquidContext: this.get(\"showFirst\"),\n          hasLiquidContext: true\n        });\n        this.set(\'currentView\', view);\n      }))\n\n    });\n  });//# sourceURL=wecudos/views/liquid-if.js");

;eval("define(\"wecudos/views/liquid-outlet\", \n  [\"ember\",\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Promise = __dependency2__.Promise;\n    var animate = __dependency2__.animate;\n    var stop = __dependency2__.stop;\n    var capitalize = Ember.String.capitalize;\n\n    __exports__[\"default\"] = Ember.ContainerView.extend({\n      classNames: [\'liquid-container\'],\n      growDuration: 250,\n      growPixelsPerSecond: 200,\n      growEasing: \'slide\',\n      enableGrowth: true,\n\n      init: function(){\n        // The ContainerView constructor normally sticks our \"currentView\"\n        // directly into _childViews, but we want to leave that up to\n        // _currentViewDidChange so we have the opportunity to launch a\n        // transition.\n        this._super();\n        Ember.A(this._childViews).clear();\n\n        if (this.get(\'containerless\')) {\n          // This prevents Ember from throwing an assertion when we try to\n          // render as a virtual view.\n          this.set(\'innerClassNameBindings\', this.get(\'classNameBindings\'));\n          this.set(\'classNameBindings\', Ember.A());\n        }\n      },\n\n      // Deliberately overriding a private method from\n      // Ember.ContainerView!\n      //\n      // We need to stop it from destroying our outgoing child view\n      // prematurely.\n      _currentViewWillChange: Ember.beforeObserver(\'currentView\', function() {}),\n\n      // Deliberately overriding a private method from\n      // Ember.ContainerView!\n      _currentViewDidChange: Ember.on(\'init\', Ember.observer(\'currentView\', function() {\n        // Normally there is only one child (the view we\'re\n        // replacing). But sometimes there may be two children (because a\n        // transition is already in progress). In any case, we tell all of\n        // them to start heading for the exits now.\n\n        var oldView = this.get(\'childViews.lastObject\'),\n            newView = this.get(\'currentView\'),\n            firstTime;\n\n        // For the convenience of the transition rules, we explicitly\n        // track our first transition, which happens at initial render.\n        firstTime = !this._hasTransitioned;\n        this._hasTransitioned = true;\n\n        // Idempotence\n        if ((!oldView && !newView) ||\n            (oldView && oldView.get(\'currentView\') === newView) ||\n            (this._runningTransition &&\n             this._runningTransition.oldView === oldView &&\n             this._runningTransition.newContent === newView\n            )) {\n          return;\n        }\n\n        // `transitions` comes from dependency injection, see the\n        // liquid-fire app initializer.\n        var transition = this.get(\'transitions\').transitionFor(this, oldView, newView, this.get(\'use\'), firstTime);\n\n        if (this._runningTransition) {\n          this._runningTransition.interrupt();\n        }\n\n        this._runningTransition = transition;\n        transition.run()[\"catch\"](function(err){\n          // Force any errors through to the RSVP error handler, because\n          // of https://github.com/tildeio/rsvp.js/pull/278.  The fix got\n          // into Ember 1.7, so we can drop this once we decide 1.6 is\n          // EOL.\n          Ember.RSVP.Promise.resolve()._onerror(err);\n        });\n      })),\n\n      _liquidChildFor: function(content) {\n        if (content && !content.get(\'hasLiquidContext\')){\n          content.set(\'liquidContext\', content.get(\'context\'));\n        }\n        var LiquidChild = this.container.lookupFactory(\'view:liquid-child\');\n        var childProperties = {\n          currentView: content\n        };\n        if (this.get(\'containerless\')) {\n          childProperties.classNames = this.get(\'classNames\').without(\'liquid-container\');\n          childProperties.classNameBindings = this.get(\'innerClassNameBindings\');\n        }\n        return LiquidChild.create(childProperties);\n      },\n\n      _pushNewView: function(newView) {\n        if (!newView) {\n          return Promise.resolve();\n        }\n        var child = this._liquidChildFor(newView),\n            promise = new Promise(function(resolve) {\n              child._resolveInsertion = resolve;\n            });\n        this.pushObject(child);\n        return promise;\n      },\n\n      cacheSize: function() {\n        var elt = this.$();\n        if (elt) {\n          // Measure original size.\n          this._cachedSize = getSize(elt);\n        }\n      },\n\n      unlockSize: function() {\n        var self = this;\n        function doUnlock(){\n          var elt = self.$();\n          if (elt) {\n            elt.css({width: \'\', height: \'\'});\n          }\n        }\n        if (this._scaling) {\n          this._scaling.then(doUnlock);\n        } else {\n          doUnlock();\n        }\n      },\n\n      _durationFor: function(before, after) {\n        return Math.min(this.get(\'growDuration\'), 1000*Math.abs(before - after)/this.get(\'growPixelsPerSecond\'));\n      },\n\n      _adaptDimension: function(dimension, before, after) {\n        if (before[dimension] === after[dimension] || !this.get(\'enableGrowth\')) {\n          var elt = this.$();\n          if (elt) {\n            elt[dimension](after[dimension]);\n          }\n          return Promise.resolve();\n        } else {\n          // Velocity deals in literal width/height, whereas jQuery deals\n          // in box-sizing-dependent measurements.\n          var target = {};\n          target[dimension] = [\n            after[\'literal\'+capitalize(dimension)],\n            before[\'literal\'+capitalize(dimension)],\n          ];\n          return animate(this, target, {\n            duration: this._durationFor(before[dimension], after[dimension]),\n            queue: false,\n            easing: this.get(\'growEasing\')\n          });\n        }\n      },\n\n      adaptSize: function() {\n        stop(this);\n\n        var elt = this.$();\n        if (!elt) { return; }\n\n        // Measure new size.\n        var newSize = getSize(elt);\n        if (typeof(this._cachedSize) === \'undefined\') {\n          this._cachedSize = newSize;\n        }\n\n        // Now that measurements have been taken, lock the size\n        // before the invoking the scaling transition.\n        elt.width(this._cachedSize.width);\n        elt.height(this._cachedSize.height);\n\n        this._scaling = Promise.all([\n          this._adaptDimension(\'width\', this._cachedSize, newSize),\n          this._adaptDimension(\'height\', this._cachedSize, newSize),\n        ]);\n      }\n\n    });\n\n    // We\'re tracking both jQuery\'s box-sizing dependent measurements and\n    // the literal CSS properties, because it\'s nice to get/set dimensions\n    // with jQuery and not worry about boz-sizing *but* Velocity needs the\n    // raw values.\n    function getSize(elt) {\n      return {\n        width: elt.width(),\n        literalWidth: parseInt(elt.css(\'width\'),10),\n        height: elt.height(),\n        literalHeight: parseInt(elt.css(\'height\'),10)\n      };\n    }\n  });//# sourceURL=wecudos/views/liquid-outlet.js");

;eval("define(\"wecudos/views/liquid-with\", \n  [\"wecudos/views/liquid-outlet\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var LiquidOutlet = __dependency1__[\"default\"];\n    var Ember = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = LiquidOutlet.extend({\n      liquidUpdate: Ember.on(\'init\', Ember.observer(\'boundContext\', function(){\n        var context = this.get(\'boundContext\');\n        if (Ember.isEmpty(context)) {\n          this.set(\'currentView\', null);\n          return;\n        }\n        var view = Ember._MetamorphView.create({\n          container: this.container,\n          templateName: \'liquid-with\',\n          boundContext: context,\n          liquidWithParent: this,\n          liquidContext: context,\n          hasLiquidContext: true,\n        });\n        this.set(\'currentView\', view);\n      }))\n\n    });\n  });//# sourceURL=wecudos/views/liquid-with.js");

/* jshint ignore:start */

define('wecudos/config/environment', ['ember'], function(Ember) {
  var prefix = 'wecudos';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */



});

if (runningTests) {
  require('wecudos/tests/test-helper');
} else {
  require('wecudos/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
